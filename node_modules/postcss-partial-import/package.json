{
  "_args": [
    [
      {
        "raw": "postcss-partial-import@^4.1.0",
        "scope": null,
        "escapedName": "postcss-partial-import",
        "name": "postcss-partial-import",
        "rawSpec": "^4.1.0",
        "spec": ">=4.1.0 <5.0.0",
        "type": "range"
      },
      "/Users/Oluwashola/webToolsProjects/frontend-starter/node_modules/precss"
    ]
  ],
  "_from": "postcss-partial-import@>=4.1.0 <5.0.0",
  "_id": "postcss-partial-import@4.1.0",
  "_inCache": true,
  "_location": "/postcss-partial-import",
  "_nodeVersion": "7.10.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/postcss-partial-import-4.1.0.tgz_1494676765135_0.17847729683853686"
  },
  "_npmUser": {
    "name": "jonathantneal",
    "email": "jonathantneal@hotmail.com"
  },
  "_npmVersion": "4.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "postcss-partial-import@^4.1.0",
    "scope": null,
    "escapedName": "postcss-partial-import",
    "name": "postcss-partial-import",
    "rawSpec": "^4.1.0",
    "spec": ">=4.1.0 <5.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/precss"
  ],
  "_resolved": "https://registry.npmjs.org/postcss-partial-import/-/postcss-partial-import-4.1.0.tgz",
  "_shasum": "f6c3e78e7bbeda4d9dab96d360367b90b353f9a4",
  "_shrinkwrap": null,
  "_spec": "postcss-partial-import@^4.1.0",
  "_where": "/Users/Oluwashola/webToolsProjects/frontend-starter/node_modules/precss",
  "author": {
    "name": "Jonathan Neal",
    "email": "jonathantneal@hotmail.com"
  },
  "bugs": {
    "url": "https://github.com/jonathantneal/postcss-partial-import/issues"
  },
  "dependencies": {
    "glob": "^7.1.1",
    "postcss-import": "^10.0.0"
  },
  "description": "Inline sugary @import statements in CSS",
  "devDependencies": {
    "eslint": "^3.19.0",
    "eslint-config-dev": "2.0.0",
    "normalize-css": "^2.3.1",
    "postcss": "^6.0.1",
    "postcss-tape": "2.0.1",
    "pre-commit": "^1.2.2"
  },
  "directories": {},
  "dist": {
    "shasum": "f6c3e78e7bbeda4d9dab96d360367b90b353f9a4",
    "tarball": "https://registry.npmjs.org/postcss-partial-import/-/postcss-partial-import-4.1.0.tgz"
  },
  "engines": {
    "node": ">=4.0.0"
  },
  "eslintConfig": {
    "extends": "dev"
  },
  "files": [
    "index.js",
    "lib"
  ],
  "gitHead": "df8ea5ef1402dada56367a53aaf437967e34708d",
  "homepage": "https://github.com/jonathantneal/postcss-partial-import#readme",
  "keywords": [
    "postcss",
    "css",
    "postcss-plugin",
    "sugar",
    "sass",
    "scss",
    "imports",
    "styles",
    "files",
    "partials",
    "modules",
    "bower",
    "node",
    "npm"
  ],
  "license": "CC0-1.0",
  "main": "index.js",
  "maintainers": [
    {
      "name": "jonathantneal",
      "email": "jonathantneal@hotmail.com"
    }
  ],
  "name": "postcss-partial-import",
  "optionalDependencies": {},
  "readme": "\n# Partial Import <a href=\"https://github.com/postcss/postcss\"><img src=\"https://postcss.github.io/postcss/logo.svg\" alt=\"PostCSS Logo\" width=\"90\" height=\"90\" align=\"right\"></a>\n\n[![NPM Version][npm-img]][npm-url]\n[![Build Status][cli-img]][cli-url]\n[![Licensing][lic-image]][lic-url]\n[![Changelog][log-image]][log-url]\n[![Gitter Chat][git-image]][git-url]\n\n[Partial Import] lets you use sugary `@import` statements in CSS, including [glob]-like and [Sass]-like behavior. It even lets you generates imports as a scaffolding tool.\n\n```css\n/* before: style.css */\n\n@import \"foo/bar\";\n\n/* before: foo/bar.css */\n\n.example-1 {\n    background-color: #fafafa;\n}\n\n/* after: style.css */\n\n.example-1 {\n    background-color: #fafafa;\n}\n```\n\n## Options\n\n#### `root`\n\nType: `String`  \nDefault: [`from`](https://github.com/postcss/postcss#node-source) or `process.cwd()`\n\nThe root where paths are resolved. This should be the directory containing `node_modules`.\n\n#### `path`\n\nType: `String` | `Array`  \nDefault: `[]`\n\nA path or paths used to locate files.\n\n#### `plugins`\n\nType: `Array`  \nDefault: `undefined`\n\nAn array of plugins to be applied to imported file.\n\n#### `onImport`\n\nType: `Function`  \nDefault: `null`\n\nThe function called after the import process, receiving an array of imported files.\n\n#### `resolve`\n\nType: `Function`  \nDefault: `null`\n\nA custom resolver, receiving the `id`, `basedir`, and `importOptions` of an import.\n\n#### `load`\n\nType: `Function`  \nDefault: null\n\nA custom loader, receiving the `filename`, `importOptions`, and content or\npromised content.\n\n#### `skipDuplicates`\n\nType: `Boolean`  \nDefault: `true`\n\nWhether similar files (based on the same content) will be skipped.\n\n#### `prefix`\n\nType: `String`  \nDefault: `\"\"`\n\nLeading characters conditionally prepended to imports which are not found without them. For [Sass]-like, use `\"_\"`.\n\n#### `glob`\n\nType: `Boolean` | `Object`  \nDefault: `true`\n\nWhether [glob]-like behavior should be supported by imports. An object passed here will be forwarded to [glob] in order to change pattern matching behavior.\n\n#### `touch`\n\nType: `Boolean`  \nDefault: `false`\n\nWhether imports should be created as files if they do not already exist.\n\n#### `extension`\n\nType: `String`  \nDefault: `.css`\n\nA file extension conditionally appended to touched imports which do not specify an extension.\n\n## Usage\n\nAdd [Partial Import] to your build tool:\n\n```bash\nnpm install postcss-partial-import --save-dev\n```\n\n#### Node\n\n```js\nrequire('postcss-partial-import').process(YOUR_CSS, { /* options */ });\n```\n\n#### PostCSS\n\nAdd [PostCSS] to your build tool:\n\n```bash\nnpm install postcss --save-dev\n```\n\nLoad [Partial Import] as a PostCSS plugin:\n\n```js\npostcss([\n\trequire('postcss-partial-import')({ /* options */ })\n]).process(YOUR_CSS, /* options */);\n```\n\n#### Gulp\n\nAdd [Gulp PostCSS] to your build tool:\n\n```bash\nnpm install gulp-postcss --save-dev\n```\n\nEnable [Partial Import] within your Gulpfile:\n\n```js\nvar postcss = require('gulp-postcss');\n\ngulp.task('css', function () {\n\treturn gulp.src('./src/*.css').pipe(\n\t\tpostcss([\n\t\t\trequire('postcss-partial-import')({ /* options */ })\n\t\t])\n\t).pipe(\n\t\tgulp.dest('.')\n\t);\n});\n```\n\n#### Grunt\n\nAdd [Grunt PostCSS] to your build tool:\n\n```bash\nnpm install grunt-postcss --save-dev\n```\n\nEnable [Partial Import] within your Gruntfile:\n\n```js\ngrunt.loadNpmTasks('grunt-postcss');\n\ngrunt.initConfig({\n\tpostcss: {\n\t\toptions: {\n\t\t\tuse: [\n\t\t\t\trequire('postcss-partial-import')({ /* options */ })\n\t\t\t]\n\t\t},\n\t\tdist: {\n\t\t\tsrc: '*.css'\n\t\t}\n\t}\n});\n```\n\n[npm-url]: https://www.npmjs.com/package/postcss-partial-import\n[npm-img]: https://img.shields.io/npm/v/postcss-partial-import.svg\n[cli-url]: https://travis-ci.org/jonathantneal/postcss-partial-import\n[cli-img]: https://img.shields.io/travis/jonathantneal/postcss-partial-import.svg\n[lic-url]: LICENSE.md\n[lic-image]: https://img.shields.io/npm/l/postcss-partial-import.svg\n[log-url]: CHANGELOG.md\n[log-image]: https://img.shields.io/badge/changelog-md-blue.svg\n[git-url]: https://gitter.im/postcss/postcss\n[git-image]: https://img.shields.io/badge/chat-gitter-blue.svg\n\n[Partial Import]: https://github.com/jonathantneal/postcss-partial-import\n[glob]: https://github.com/isaacs/node-glob#readme\n[Sass]: http://sass-lang.com/guide#topic-4\n[PostCSS]: https://github.com/postcss/postcss\n[Gulp PostCSS]: https://github.com/postcss/gulp-postcss\n[Grunt PostCSS]: https://github.com/nDmitry/grunt-postcss\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jonathantneal/postcss-partial-import.git"
  },
  "scripts": {
    "clean": "git clean -X -d -f",
    "prepublish": "npm test",
    "test": "echo 'Running tests...'; npm run test:js && npm run test:tape",
    "test:js": "eslint *.js --cache --ignore-pattern .gitignore",
    "test:tape": "postcss-tape"
  },
  "version": "4.1.0"
}
