{
  "_args": [
    [
      {
        "raw": "mixin-object@^2.0.1",
        "scope": null,
        "escapedName": "mixin-object",
        "name": "mixin-object",
        "rawSpec": "^2.0.1",
        "spec": ">=2.0.1 <3.0.0",
        "type": "range"
      },
      "/Users/Oluwashola/webToolsProjects/frontend-starter/node_modules/shallow-clone"
    ]
  ],
  "_from": "mixin-object@>=2.0.1 <3.0.0",
  "_id": "mixin-object@2.0.1",
  "_inCache": true,
  "_location": "/mixin-object",
  "_nodeVersion": "0.12.4",
  "_npmUser": {
    "name": "jonschlinkert",
    "email": "github@sellside.com"
  },
  "_npmVersion": "2.10.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "mixin-object@^2.0.1",
    "scope": null,
    "escapedName": "mixin-object",
    "name": "mixin-object",
    "rawSpec": "^2.0.1",
    "spec": ">=2.0.1 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/shallow-clone"
  ],
  "_resolved": "https://registry.npmjs.org/mixin-object/-/mixin-object-2.0.1.tgz",
  "_shasum": "4fb949441dab182540f1fe035ba60e1947a5e57e",
  "_shrinkwrap": null,
  "_spec": "mixin-object@^2.0.1",
  "_where": "/Users/Oluwashola/webToolsProjects/frontend-starter/node_modules/shallow-clone",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/mixin-object/issues"
  },
  "dependencies": {
    "for-in": "^0.1.3",
    "is-extendable": "^0.1.1"
  },
  "description": "Mixin the own and inherited properties of other objects onto the first object. Pass an empty object as the first arg to shallow clone.",
  "devDependencies": {
    "mocha": "^2.2.5",
    "should": "^7.0.1"
  },
  "directories": {},
  "dist": {
    "shasum": "4fb949441dab182540f1fe035ba60e1947a5e57e",
    "tarball": "https://registry.npmjs.org/mixin-object/-/mixin-object-2.0.1.tgz"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "d01616d67f22220ef32c754c09d5caad46402b5a",
  "homepage": "https://github.com/jonschlinkert/mixin-object",
  "keywords": [
    "assign",
    "copy",
    "extend",
    "key",
    "merge",
    "mixin",
    "object",
    "objects",
    "prop",
    "properties",
    "property",
    "shallow",
    "util",
    "value"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "jonschlinkert",
      "email": "github@sellside.com"
    }
  ],
  "name": "mixin-object",
  "optionalDependencies": {},
  "readme": "# mixin-object [![NPM version](https://badge.fury.io/js/mixin-object.svg)](http://badge.fury.io/js/mixin-object)\n\n> Mixin the own and inherited properties of other objects onto the first object. Pass an empty object as the first arg to shallow clone.\n\nIf you only want to combine own-properties, use [extend-shallow](https://github.com/jonschlinkert/extend-shallow).\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/)\n\n```sh\n$ npm i mixin-object --save\n```\n\nInstall with [bower](http://bower.io/)\n\n```sh\n$ bower install mixin-object --save\n```\n\n## Usage\n\n```js\nvar mixin = require('mixin-object');\n\nvar obj = {c: 'c'};\nvar foo = mixin({a: 'a'}, {b: 'b'});\nconsole.log(foo);\n//=> {c: 'c', a: 'a', b: 'b'}\nconsole.log(obj);\n//=> {c: 'c'}\n\nmixin({}, {a: 'a'}, {b: 'b'});\n//=> {a: 'a', b: 'b'}\n```\n\n## Related\n\n* [assign-deep](https://github.com/jonschlinkert/assign-deep): Deeply assign the enumerable properties of source objects to a destination object.\n* [defaults-deep](https://github.com/jonschlinkert/defaults-deep): Like `extend` but recursively copies only the missing properties/values to the target object.\n* [extend-shallow](https://github.com/jonschlinkert/extend-shallow): Extend an object with the properties of additional objects. node.js/javascript util.\n* [for-own](https://github.com/jonschlinkert/for-own): Iterate over the own enumerable properties of an object, and return an object with properties… [more](https://github.com/jonschlinkert/for-own)\n* [for-in](https://github.com/jonschlinkert/for-in): Iterate over the own and inherited enumerable properties of an objecte, and return an object… [more](https://github.com/jonschlinkert/for-in)\n* [isobject](https://github.com/jonschlinkert/isobject): Returns true if the value is an object and not an array or null.\n* [is-plain-object](https://github.com/jonschlinkert/is-plain-object): Returns true if an object was created by the `Object` constructor.\n* [mixin-deep](https://github.com/jonschlinkert/mixin-deep): Deeply mix the properties of objects into the first object. Like merge-deep, but doesn't clone.\n* [merge-deep](https://github.com/jonschlinkert/merge-deep): Recursively merge values in a javascript object.\n\n## Running tests\n\nInstall dev dependencies:\n\n```sh\n$ npm i -d && npm test\n```\n\n## Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/mixin-object/issues/new)\n\n## Author\n\n**Jon Schlinkert**\n\n+ [github/jonschlinkert](https://github.com/jonschlinkert)\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n## License\n\nCopyright © 2014-2015 [Jon Schlinkert](https://github.com/jonschlinkert)\nReleased under the MIT license.\n\n***\n\n_This file was generated by [verb-cli](https://github.com/assemble/verb-cli) on July 05, 2015._",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jonschlinkert/mixin-object.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "verbiage": {
    "related": {
      "list": [
        "defaults-deep",
        "extend-shallow",
        "assign-deep",
        "mixin-deep",
        "merge-deep",
        "isobject",
        "is-plain-object",
        "for-own",
        "for-in"
      ]
    }
  },
  "version": "2.0.1"
}
