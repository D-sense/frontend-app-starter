{
  "_args": [
    [
      {
        "raw": "precss",
        "scope": null,
        "escapedName": "precss",
        "name": "precss",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/Oluwashola/webToolsProjects/frontend-starter"
    ]
  ],
  "_from": "precss@latest",
  "_id": "precss@2.0.0",
  "_inCache": true,
  "_location": "/precss",
  "_nodeVersion": "6.10.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/precss-2.0.0.tgz_1498756430162_0.593144018901512"
  },
  "_npmUser": {
    "name": "jonathantneal",
    "email": "jonathantneal@hotmail.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {
    "color-convert": "1.9.1",
    "escape-string-regexp": "1.0.5"
  },
  "_requested": {
    "raw": "precss",
    "scope": null,
    "escapedName": "precss",
    "name": "precss",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/precss/-/precss-2.0.0.tgz",
  "_shasum": "7f567e3318e06d44c8fdbf9e58452e8358bf4b71",
  "_shrinkwrap": null,
  "_spec": "precss",
  "_where": "/Users/Oluwashola/webToolsProjects/frontend-starter",
  "author": {
    "name": "Jonathan Neal",
    "email": "jonathantneal@hotmail.com"
  },
  "bugs": {
    "url": "https://github.com/jonathantneal/precss/issues"
  },
  "dependencies": {
    "postcss": "^6.0.3",
    "postcss-advanced-variables": "1.2.2",
    "postcss-atroot": "^0.1.3",
    "postcss-color-function": "^4.0.0",
    "postcss-custom-media": "^6.0.0",
    "postcss-custom-properties": "^6.1.0",
    "postcss-custom-selectors": "^4.0.1",
    "postcss-extend": "^1.0.5",
    "postcss-media-minmax": "^3.0.0",
    "postcss-mixins": "^6.0.1",
    "postcss-nested": "^2.0.2",
    "postcss-nesting": "^4.0.1",
    "postcss-partial-import": "^4.1.0",
    "postcss-property-lookup": "^1.2.1",
    "postcss-selector-matches": "^3.0.1",
    "postcss-selector-not": "^3.0.1"
  },
  "description": "Use Sass-like markup in your CSS",
  "devDependencies": {
    "eslint": "^4.1.1",
    "eslint-config-dev": "2.0.0",
    "fse": "^3.0.0",
    "postcss-tape": "2.0.1",
    "pre-commit": "^1.2.2",
    "tap-spec": "^4.1.1",
    "tape": "^4.7.0"
  },
  "directories": {},
  "dist": {
    "shasum": "7f567e3318e06d44c8fdbf9e58452e8358bf4b71",
    "tarball": "https://registry.npmjs.org/precss/-/precss-2.0.0.tgz"
  },
  "engines": {
    "node": ">=4.0.0"
  },
  "eslintConfig": {
    "extends": "dev"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "559e84dff36acb9c59809fe74c2f52c1a9cf2629",
  "homepage": "https://github.com/jonathantneal/precss#readme",
  "keywords": [
    "postcss",
    "css",
    "postcss-plugin",
    "sass",
    "variables",
    "conditionals",
    "ifs",
    "thens",
    "elses",
    "fors",
    "nesteds",
    "nestings",
    "eaches",
    "mixins",
    "imports",
    "extends",
    "placeholders"
  ],
  "license": "CC0-1.0",
  "main": "index.js",
  "maintainers": [
    {
      "name": "jonathantneal",
      "email": "jonathantneal@hotmail.com"
    }
  ],
  "name": "precss",
  "optionalDependencies": {},
  "readme": "# PreCSS [![Build Status][ci-img]][ci]\n\n<img align=\"right\" width=\"150\" height=\"150\" src=\"https://i.imgur.com/zxxN3OX.png\" alt=\"\">\n\n[PreCSS] is a tool that allows you to use Sass-like markup in your CSS files.\n\nEnjoy a familiar syntax with variables, mixins, conditionals, and other goodies.\n\n### Variables\n\n```scss\n/* before */\n\n$blue: #056ef0;\n$column: 200px;\n\n.menu {\n\twidth: calc(4 * $column);\n}\n\n.menu_link {\n\tbackground: $blue;\n\twidth: $column;\n}\n\n/* after */\n\n.menu {\n\twidth: calc(4 * 200px);\n}\n\n.menu_link {\n\tbackground: #056ef0;\n\twidth: 200px;\n}\n```\n\n### Conditionals\n\n```scss\n/* before */\n\n.notice--clear {\n\t@if 3 < 5 {\n\t\tbackground: green;\n\t}\n\t@else {\n\t\tbackground: blue;\n\t}\n}\n\n/* after */\n\n.notice--clear {\n\tbackground: green;\n}\n```\n\n### Loops\n\n```scss\n/* before */\n\n@for $i from 1 to 3 {\n\t.b-$i { width: $(i)px; }\n}\n\n/* after */\n\n.b-1 {\n\twidth: 1px\n}\n.b-2 {\n\twidth: 2px\n}\n.b-3 {\n\twidth: 3px\n}\n```\n\n```scss\n/* before */\n\n@each $icon in (foo, bar, baz) {\n\t.icon-$(icon) {\n\t\tbackground: url('icons/$(icon).png');\n\t}\n}\n\n/* after */\n\n.icon-foo {\n\tbackground: url('icons/foo.png');\n}\n\n.icon-bar {\n\tbackground: url('icons/bar.png');\n}\n\n.icon-baz {\n\tbackground: url('icons/baz.png');\n}\n```\n\n### Mixins\n\n```scss\n/* before */\n\n@define-mixin icon $name {\n\tpadding-left: 16px;\n\n\t&::after {\n\t\tcontent: \"\";\n\t\tbackground-image: url(/icons/$(name).png);\n\t}\n}\n\n.search {\n\t@mixin icon search;\n}\n\n/* after */\n\n.search {\n\tpadding-left: 16px;\n}\n\n.search::after {\n\tcontent: \"\";\n\tbackground-image: url(/icons/search.png);\n}\n```\n\n### Extends\n\n```scss\n/* before */\n\n@define-extend bg-green {\n\tbackground: green;\n}\n\n.notice--clear {\n\t@extend bg-green;\n}\n\n/* after */\n\n.notice--clear {\n\tbackground: green;\n}\n```\n\n### Imports\n\n```scss\n/* Before */\n\n@import \"partials/base\"; /* Contents of partials/_base.css: `body { background: black; }` */\n\n\n/* After */\n\nbody { background: black; }\n```\n\n### Property Lookup\n\n```scss\n/* Before */\n\n.heading {\n\tmargin: 20px;\n\tpadding: @margin;\n}\n\n/* After */\n\n.heading {\n\tmargin: 20px;\n\tpadding: 20px;\n}\n```\n\n### Root\n\n```scss\n/* Before */\n\n.parent {\n\tbackground: white;\n\n\t@at-root{\n\t\t.child {\n\t\t\tbackground: black;\n\t\t}\n\t}\n}\n\n/* After */\n\n.child {\n\tbackground: black;\n}\n\n.parent {\n\tbackground: white;\n}\n```\n\n## Usage\n\nFollow these simple steps to use [PreCSS].\n\nAdd [PreCSS] to your build tool:\n\n```bash\nnpm install precss --save-dev\n```\n\nAdd the [PostCSS SCSS] parser to your build tool:\n\n```bash\nnpm install postcss-scss --save-dev\n```\n\n#### Node\n\n```js\nrequire('precss')({ /* options */ }).process(YOUR_CSS, { parser: require('postcss-scss') });\n```\n\n#### PostCSS\n\nAdd [PostCSS] to your build tool:\n\n```bash\nnpm install postcss --save-dev\n```\n\nLoad [PreCSS] as a PostCSS plugin:\n\n```js\npostcss([\n    require('precss')({ /* options */ })\n]).process(YOUR_CSS, { parser: require('postcss-scss') }).then(function (result) {\n\t// do something with result.css\n});\n```\n\n#### Gulp\n\nAdd [Gulp PostCSS] to your build tool:\n\n```bash\nnpm install gulp-postcss --save-dev\n```\n\nEnable [PreCSS] within your Gulpfile:\n\n```js\nvar postcss = require('gulp-postcss');\n\ngulp.task('css', function () {\n    return gulp.src('./css/src/*.css').pipe(\n        postcss([\n            require('precss')({ /* options */ })\n        ])\n    ).pipe(\n        gulp.dest('./css')\n    );\n});\n```\n\n#### Grunt\n\nAdd [Grunt PostCSS] to your build tool:\n\n```sh\nnpm install precss --save-dev\n```\n\nEnable [PreCSS] within your Gruntfile:\n\n```js\ngrunt.loadNpmTasks('grunt-postcss');\n\ngrunt.initConfig({\n\tpostcss: {\n\t\toptions: {\n\t\t\tparser: require('postcss-scss'),\n\t\t\tprocessors: [\n\t\t\t\trequire('precss')({ /* options */ })\n\t\t\t]\n\t\t},\n\t\tdist: {\n\t\t\tsrc: 'css/*.css'\n\t\t}\n\t}\n});\n```\n\n### Plugins\n\nPreCSS blends Sass-like strength with W3C future-syntax superpower, powered by the following plugins (in this order):\n\n- [postcss-partial-import]: W3C and Sass-like imports\n- [postcss-mixins]: Sass-like mixins\n- [postcss-advanced-variables]: Sass-like variables and methods\n- [postcss-custom-selectors]: W3C custom selectors\n- [postcss-custom-media]: W3C custom media queries\n- [postcss-custom-properties]: W3C custom variables\n- [postcss-media-minmax]: W3C `<` `<=` `>=` `>` media queries\n- [postcss-color-function]: W3C color methods\n- [postcss-nesting]: W3C nested selectors\n- [postcss-nested]: Sass-like nested selectors\n- [postcss-atroot]: place rules back up to the root\n- [postcss-property-lookup]: reference other property values\n- [postcss-extend]: W3C and Sass-like extend methods\n- [postcss-selector-matches]: W3C multiple matches pseudo-classes\n- [postcss-selector-not]: W3C multiple not pseudo-classes\n\n[Grunt PostCSS]: https://github.com/nDmitry/grunt-postcss\n[Gulp PostCSS]:  https://github.com/postcss/gulp-postcss\n[PostCSS SCSS]:  https://github.com/postcss/postcss-scss\n[PostCSS]:       https://github.com/postcss/postcss\n[PreCSS]:        https://github.com/jonathantneal/precss\n[ci-img]:        https://travis-ci.org/jonathantneal/precss.svg\n[ci]:            https://travis-ci.org/jonathantneal/precss\n\n[postcss-advanced-variables]: https://github.com/jonathantneal/postcss-advanced-variables\n[postcss-custom-properties]:  https://github.com/postcss/postcss-custom-properties\n[postcss-custom-selectors]:   https://github.com/postcss/postcss-custom-selectors\n[postcss-selector-matches]:   https://github.com/postcss/postcss-selector-matches\n[postcss-property-lookup]:    https://github.com/simonsmith/postcss-property-lookup\n[postcss-color-function]:     https://github.com/postcss/postcss-color-function\n[postcss-partial-import]:     https://github.com/jonathantneal/postcss-partial-import\n[postcss-custom-media]:       https://github.com/postcss/postcss-custom-media\n[postcss-media-minmax]:       https://github.com/postcss/postcss-media-minmax\n[postcss-selector-not]:       https://github.com/postcss/postcss-selector-not\n[postcss-nesting]:            https://github.com/jonathantneal/postcss-nesting\n[postcss-atroot]:             https://github.com/OEvgeny/postcss-atroot\n[postcss-extend]:             https://github.com/travco/postcss-extend\n[postcss-mixins]:             https://github.com/postcss/postcss-mixins\n[postcss-nested]:             https://github.com/postcss/postcss-nested\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jonathantneal/precss.git"
  },
  "scripts": {
    "clean": "git clean -X -d -f",
    "prepublish": "npm test",
    "test": "echo 'Running tests...'; npm run test:js && npm run test:tape",
    "test:js": "eslint *.js --cache --ignore-pattern .gitignore",
    "test:tape": "tape test/*.js | tap-spec"
  },
  "version": "2.0.0"
}
