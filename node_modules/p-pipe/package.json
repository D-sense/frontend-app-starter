{
  "_args": [
    [
      {
        "raw": "p-pipe@^1.1.0",
        "scope": null,
        "escapedName": "p-pipe",
        "name": "p-pipe",
        "rawSpec": "^1.1.0",
        "spec": ">=1.1.0 <2.0.0",
        "type": "range"
      },
      "/Users/Oluwashola/webToolsProjects/frontend-starter/node_modules/imagemin"
    ]
  ],
  "_from": "p-pipe@>=1.1.0 <2.0.0",
  "_id": "p-pipe@1.2.0",
  "_inCache": true,
  "_location": "/p-pipe",
  "_nodeVersion": "4.8.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/p-pipe-1.2.0.tgz_1501286833926_0.5472726412117481"
  },
  "_npmUser": {
    "name": "sindresorhus",
    "email": "sindresorhus@gmail.com"
  },
  "_npmVersion": "2.15.11",
  "_phantomChildren": {},
  "_requested": {
    "raw": "p-pipe@^1.1.0",
    "scope": null,
    "escapedName": "p-pipe",
    "name": "p-pipe",
    "rawSpec": "^1.1.0",
    "spec": ">=1.1.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/imagemin"
  ],
  "_resolved": "https://registry.npmjs.org/p-pipe/-/p-pipe-1.2.0.tgz",
  "_shasum": "4b1a11399a11520a67790ee5a0c1d5881d6befe9",
  "_shrinkwrap": null,
  "_spec": "p-pipe@^1.1.0",
  "_where": "/Users/Oluwashola/webToolsProjects/frontend-starter/node_modules/imagemin",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/p-pipe/issues"
  },
  "dependencies": {},
  "description": "Compose promise-returning & async functions into a reusable pipeline",
  "devDependencies": {
    "ava": "*",
    "xo": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "4b1a11399a11520a67790ee5a0c1d5881d6befe9",
    "tarball": "https://registry.npmjs.org/p-pipe/-/p-pipe-1.2.0.tgz"
  },
  "engines": {
    "node": ">=4"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "55625f01407435fb65e80ab6f7a34d6e1cb36e49",
  "homepage": "https://github.com/sindresorhus/p-pipe#readme",
  "keywords": [
    "promise",
    "pipe",
    "pipeline",
    "compose",
    "composition",
    "combine",
    "flow",
    "serial",
    "functions",
    "reusable",
    "async",
    "await",
    "promises",
    "bluebird"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "sindresorhus",
      "email": "sindresorhus@gmail.com"
    }
  ],
  "name": "p-pipe",
  "optionalDependencies": {},
  "readme": "# p-pipe [![Build Status](https://travis-ci.org/sindresorhus/p-pipe.svg?branch=master)](https://travis-ci.org/sindresorhus/p-pipe)\n\n> Compose promise-returning & async functions into a reusable pipeline\n\n\n## Install\n\n```\n$ npm install p-pipe\n```\n\n\n## Usage\n\n```js\nconst pPipe = require('p-pipe');\n\nconst addUnicorn = str => Promise.resolve(`${str} Unicorn`);\nconst addRainbow = str => Promise.resolve(`${str} Rainbow`);\n\nconst pipeline = pPipe(addUnicorn, addRainbow);\n\npipeline('❤️').then(console.log);\n//=> '❤️ Unicorn Rainbow'\n```\n\n\n## API\n\n### pPipe(input, …)\n\nThe `input` functions are applied from left to right.\n\nYou can also specify an array as the first argument instead of multiple function arguments. Mostly only useful if you have to support Node.js 4. With Node.js 6 and above you can just use spread syntax.\n\n#### input\n\nType: `Function`\n\nExpected to return a `Promise` or any value.\n\n\n## Related\n\n- [p-each-series](https://github.com/sindresorhus/p-each-series) - Iterate over promises serially\n- [p-series](https://github.com/sindresorhus/p-series) - Run promise-returning & async functions in series\n- [p-waterfall](https://github.com/sindresorhus/p-waterfall) - Run promise-returning & async functions in series, each passing its result to the next\n- [More…](https://github.com/sindresorhus/promise-fun)\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/p-pipe.git"
  },
  "scripts": {
    "test": "xo && ava"
  },
  "version": "1.2.0"
}
