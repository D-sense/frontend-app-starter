{
  "_args": [
    [
      {
        "raw": "eventsource@~0.1.6",
        "scope": null,
        "escapedName": "eventsource",
        "name": "eventsource",
        "rawSpec": "~0.1.6",
        "spec": ">=0.1.6 <0.2.0",
        "type": "range"
      },
      "/Users/Oluwashola/webToolsProjects/frontend-starter/node_modules/sockjs-client"
    ]
  ],
  "_from": "eventsource@>=0.1.6 <0.2.0",
  "_id": "eventsource@0.1.6",
  "_inCache": true,
  "_location": "/eventsource",
  "_nodeVersion": "0.12.0",
  "_npmUser": {
    "name": "aslakhellesoy",
    "email": "aslak.hellesoy@gmail.com"
  },
  "_npmVersion": "2.5.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "eventsource@~0.1.6",
    "scope": null,
    "escapedName": "eventsource",
    "name": "eventsource",
    "rawSpec": "~0.1.6",
    "spec": ">=0.1.6 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/sockjs-client"
  ],
  "_resolved": "https://registry.npmjs.org/eventsource/-/eventsource-0.1.6.tgz",
  "_shasum": "0acede849ed7dd1ccc32c811bb11b944d4f29232",
  "_shrinkwrap": null,
  "_spec": "eventsource@~0.1.6",
  "_where": "/Users/Oluwashola/webToolsProjects/frontend-starter/node_modules/sockjs-client",
  "author": {
    "name": "Aslak HellesÃ¸y",
    "email": "aslak.hellesoy@gmail.com"
  },
  "bugs": {
    "url": "http://github.com/aslakhellesoy/eventsource-node/issues"
  },
  "dependencies": {
    "original": ">=0.0.5"
  },
  "description": "W3C compliant EventSource client for Node.js",
  "devDependencies": {
    "mocha": ">=1.21.4"
  },
  "directories": {
    "lib": "./lib"
  },
  "dist": {
    "shasum": "0acede849ed7dd1ccc32c811bb11b944d4f29232",
    "tarball": "https://registry.npmjs.org/eventsource/-/eventsource-0.1.6.tgz"
  },
  "engines": {
    "node": ">=0.8.0"
  },
  "gitHead": "c93edb547891f7cbd8d576751427445029bb782b",
  "homepage": "http://github.com/aslakhellesoy/eventsource-node",
  "keywords": [
    "eventsource",
    "http",
    "streaming",
    "sse"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/aslakhellesoy/eventsource-node/raw/master/LICENSE"
    }
  ],
  "main": "./lib/eventsource",
  "maintainers": [
    {
      "name": "aslakhellesoy",
      "email": "aslak.hellesoy@gmail.com"
    }
  ],
  "name": "eventsource",
  "optionalDependencies": {},
  "readme": "# EventSource [![Build Status](https://secure.travis-ci.org/aslakhellesoy/eventsource-node.png)](http://travis-ci.org/aslakhellesoy/eventsource-node) [![Dependencies](https://david-dm.org/aslakhellesoy/eventsource-node.png)](https://david-dm.org/aslakhellesoy/eventsource-node) [![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/aslakhellesoy/eventsource-node/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\n\n\n[![NPM](https://nodei.co/npm/eventsource.png?stars&downloads)](https://nodei.co/npm/eventsource/)\n[![NPM](https://nodei.co/npm-dl/eventsource.png)](https://nodei.co/npm/eventsource/)\n\nThis library implements the [EventSource](http://dev.w3.org/html5/eventsource/) client for Node.js. The API aims to be W3C compatible.\n\n## Install\n\n    npm install eventsource\n\n## Usage\n\n```javascript\nvar EventSource = require('eventsource');\n\nvar es = new EventSource('http://demo-eventsource.rhcloud.com/');\nes.onmessage = function(e) {\n  console.log(e.data);\n};\nes.onerror = function() {\n  console.log('ERROR!');\n};\n```\n\nSee the [spec](http://dev.w3.org/html5/eventsource/) for API docs.\n\n## Example\n\nSee https://github.com/einaros/sse-example\n\n## Extensions to the W3C API\n\n### Setting HTTP request headers\n\nYou can define custom HTTP headers for the initial HTTP request. This can be useful for e.g. sending cookies\nor to specify an initial `Last-Event-ID` value.\n\nHTTP headers are defined by assigning a `headers` attribute to the optional `eventSourceInitDict` argument:\n\n```javascript\nvar eventSourceInitDict = {headers: {'Cookie': 'test=test'}};\nvar es = new EventSource(url, eventSourceInitDict);\n```\n\n### Allow unauthorized HTTPS requests\n\nBy default, https requests that cannot be authorized will cause connection to fail and an exception\nto be emitted. You can override this behaviour:\n\n```javascript\nvar eventSourceInitDict = {rejectUnauthorized: false};\nvar es = new EventSource(url, eventSourceInitDict);\n```\n\nNote that for Node.js < v0.10.x this option has no effect - unauthorized HTTPS requests are *always* allowed.\n\n### HTTP status code on error events\n\nUnauthorized and redirect error status codes (for example 401, 403, 301, 307) are available in the `status` property in the error event.\n\n```javascript\nes.onerror = function (err) {\n  if (err) {\n    if (err.status === 401 || err.status === 403) {\n      console.log('not authorized');\n    }\n  }\n};\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/aslakhellesoy/eventsource-node.git"
  },
  "scripts": {
    "postpublish": "git push && git push --tags",
    "test": "mocha --reporter spec"
  },
  "version": "0.1.6"
}
